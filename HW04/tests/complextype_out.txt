./Chapter12cpp execute -ix tests/ComplexType.pas
001 PROGRAM ComplexType;
002 
003 TYPE
004     complex = RECORD
005                   re, im : real
006               END;
007               
008     mystring = ARRAY[1..3] OF char;
009 
010 VAR
011     x, y, z : complex;
012     
013 PROCEDURE print(name : mystring; VAR z : complex);
014     BEGIN
015         write(name, ' = (', z.re:0:5, ', ', z.im:0:5, ') ');
016     END;
017     
018 PROCEDURE add(VAR x, y, z : complex);   
019     BEGIN
020         z.re := x.re + y.re;
021         z.im := x.im + y.im;
022     END;
023     
024 PROCEDURE subtract(VAR x, y, z : complex);
025     BEGIN
026         z.re := x.re - y.re;
027         z.im := x.im - y.im;
028     END;
029     
030 PROCEDURE multiply(VAR x, y, z: complex);
031     BEGIN
032         z.re := x.re*y.re - x.im*y.im;
033         z.im := x.re*y.im + x.im*y.re;
034     END;
035     
036 PROCEDURE divide(VAR x, y, z : complex);
037     VAR
038         denom : real;
039     
040     BEGIN
041         denom := sqr(y.re) + sqr(y.im);
042     
043         z.re := (x.re*y.re + x.im*y.im)/denom;
044         z.im := (x.im*y.re - x.re*y.im)/denom;
045     END;
046 
047 BEGIN {ComplexTest}
048     x.re := 3; x.im := 2;  print('  x', x);
049     y.re := 8; y.im := -5; print('  y', y);
050     add(x, y, z);          print('x+y', z);
051     writeln;
052 
053     print('  x', x);
054     print('  y', y);
055     subtract(x, y, z); print('x-y', z);
056     writeln;
057     
058     x.re := 4; x.im := -2; print('  x', x);
059     y.re := 1; y.im := -5; print('  y', y);
060     multiply(x, y, z);     print('x*y', z);
061     writeln;
062     
063     x.re := -3; x.im := 2;  print('  x', x);
064     y.re := 3;  y.im := -6; print('  y', y);
065     divide(x, y, z);        print('x/y', z);
066     writeln;
067     
068     x.re := 5; x.im := 0; print('  x', x);
069     y.re := 3; y.im := 2; print('  y', y);
070     add(x, y, z);         print('x+y', z);
071     writeln;
072     
073     x.re := 5; x.im := 4; print('  x', x);
074     y.re := 2; y.im := 0; print('  y', y);
075     multiply(x, y, z);    print('x*y', z);
076     writeln;
077     
078     x.re := -2; x.im := -4; print('  x', x);
079     y.re := 0;  y.im :=  1; print('  y', y);
080     divide(x, y, z);        print('x/y', z);
081     writeln;
082 END {ComplexTest}.

                  82 source lines.
                   0 syntax errors.
                0.00 seconds total parsing time.

===== CROSS-REFERENCE TABLE =====

*** PROGRAM complextype ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
add             
                                 Defined as: PROCEDURE
                                 Scope nesting level: 1
complex          004 011 013 018 024 030 036
                                 Defined as: type
                                 Scope nesting level: 1
                                 Type form = record, Type id = complex
divide          
                                 Defined as: PROCEDURE
                                 Scope nesting level: 1
multiply        
                                 Defined as: PROCEDURE
                                 Scope nesting level: 1
mystring         008 013
                                 Defined as: type
                                 Scope nesting level: 1
                                 Type form = array, Type id = mystring
                                 --- INDEX TYPE ---
                                 Type form = subrange, Type id = <unnamed>
                                 --- Base type ---
                                 Type form = scalar, Type id = integer
                                 Range = 1..3
                                 --- ELEMENT TYPE ---
                                 Type form = scalar, Type id = char
                                 3 elements
print           
                                 Defined as: PROCEDURE
                                 Scope nesting level: 1
subtract        
                                 Defined as: PROCEDURE
                                 Scope nesting level: 1
x                011 048 048 048 050 053 055 058 058 058 060 063 063 063 065 068 068 068 070 073 073 073 075 078 078 078 080
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = record, Type id = complex
y                011 049 049 049 050 054 055 059 059 059 060 064 064 064 065 069 069 069 070 074 074 074 075 079 079 079 080
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = record, Type id = complex
z                011 050 050 055 055 060 060 065 065 070 070 075 075 080 080
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = record, Type id = complex

--- RECORD complex ---

Identifier       Line numbers    Type specification
----------       ------------    ------------------
im               005 015 021 021 021 027 027 027 032 032 033 033 033 041 043 043 044 044 044 048 049 058 059 063 064 068 069 073 074 078 079
                                 Defined as: record field
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
re               005 015 020 020 020 026 026 026 032 032 032 033 033 041 043 043 043 044 044 048 049 058 059 063 064 068 069 073 074 078 079
                                 Defined as: record field
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real

*** PROCEDURE print ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
name             013 015
                                 Defined as: value parameter
                                 Scope nesting level: 2
                                 Type form = array, Type id = mystring
z                013 015 015
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex

*** PROCEDURE add ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
x                018 020 021
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex
y                018 020 021
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex
z                018 020 021
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex

*** PROCEDURE subtract ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
x                024 026 027
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex
y                024 026 027
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex
z                024 026 027
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex

*** PROCEDURE multiply ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
x                030 032 032 033 033
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex
y                030 032 032 033 033
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex
z                030 032 033
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex

*** PROCEDURE divide ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
denom            038 041 043 044
                                 Defined as: variable
                                 Scope nesting level: 2
                                 Type form = scalar, Type id = real
x                036 043 043 044 044
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex
y                036 041 041 043 043 044 044
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex
z                036 043 044
                                 Defined as: VAR parameter
                                 Scope nesting level: 2
                                 Type form = record, Type id = complex

===== INTERMEDIATE CODE =====

*** PROGRAM complextype ***

<COMPOUND line="47">
    <ASSIGN line="48" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="3" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="48" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="2" type_id="integer" />
    </ASSIGN>
    <CALL line="48" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  x" type_id="$anon_7fef24b4" />
            <VARIABLE id="x" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <ASSIGN line="49" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="8" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="49" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <NEGATE type_id="integer">
            <INTEGER_CONSTANT value="5" type_id="integer" />
        </NEGATE>
    </ASSIGN>
    <CALL line="49" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  y" type_id="$anon_7fef3634" />
            <VARIABLE id="y" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="50" id="add" level="1">
        <PARAMETERS>
            <VARIABLE id="x" level="1" type_id="complex" />
            <VARIABLE id="y" level="1" type_id="complex" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="50" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="x+y" type_id="$anon_7fef42f4" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="51" id="writeln" level="0" />
    <CALL line="53" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  x" type_id="$anon_7fef3514" />
            <VARIABLE id="x" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="54" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  y" type_id="$anon_7fef5524" />
            <VARIABLE id="y" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="55" id="subtract" level="1">
        <PARAMETERS>
            <VARIABLE id="x" level="1" type_id="complex" />
            <VARIABLE id="y" level="1" type_id="complex" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="55" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="x-y" type_id="$anon_7fef61c4" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="56" id="writeln" level="0" />
    <ASSIGN line="58" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="4" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="58" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <NEGATE type_id="integer">
            <INTEGER_CONSTANT value="2" type_id="integer" />
        </NEGATE>
    </ASSIGN>
    <CALL line="58" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  x" type_id="$anon_7fef74c4" />
            <VARIABLE id="x" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <ASSIGN line="59" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="1" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="59" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <NEGATE type_id="integer">
            <INTEGER_CONSTANT value="5" type_id="integer" />
        </NEGATE>
    </ASSIGN>
    <CALL line="59" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  y" type_id="$anon_7fef86b4" />
            <VARIABLE id="y" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="60" id="multiply" level="1">
        <PARAMETERS>
            <VARIABLE id="x" level="1" type_id="complex" />
            <VARIABLE id="y" level="1" type_id="complex" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="60" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="x*y" type_id="$anon_7fef9354" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="61" id="writeln" level="0" />
    <ASSIGN line="63" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <NEGATE type_id="integer">
            <INTEGER_CONSTANT value="3" type_id="integer" />
        </NEGATE>
    </ASSIGN>
    <ASSIGN line="63" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="2" type_id="integer" />
    </ASSIGN>
    <CALL line="63" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  x" type_id="$anon_7fefa674" />
            <VARIABLE id="x" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <ASSIGN line="64" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="3" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="64" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <NEGATE type_id="integer">
            <INTEGER_CONSTANT value="6" type_id="integer" />
        </NEGATE>
    </ASSIGN>
    <CALL line="64" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  y" type_id="$anon_7fefb7c4" />
            <VARIABLE id="y" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="65" id="divide" level="1">
        <PARAMETERS>
            <VARIABLE id="x" level="1" type_id="complex" />
            <VARIABLE id="y" level="1" type_id="complex" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="65" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="x/y" type_id="$anon_7fefc464" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="66" id="writeln" level="0" />
    <ASSIGN line="68" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="5" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="68" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="0" type_id="integer" />
    </ASSIGN>
    <CALL line="68" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  x" type_id="$anon_7fefd814" />
            <VARIABLE id="x" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <ASSIGN line="69" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="3" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="69" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="2" type_id="integer" />
    </ASSIGN>
    <CALL line="69" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  y" type_id="$anon_7fefe8c4" />
            <VARIABLE id="y" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="70" id="add" level="1">
        <PARAMETERS>
            <VARIABLE id="x" level="1" type_id="complex" />
            <VARIABLE id="y" level="1" type_id="complex" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="70" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="x+y" type_id="$anon_7feff564" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="71" id="writeln" level="0" />
    <ASSIGN line="73" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="5" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="73" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="4" type_id="integer" />
    </ASSIGN>
    <CALL line="73" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  x" type_id="$anon_7ff007a4" />
            <VARIABLE id="x" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <ASSIGN line="74" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="2" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="74" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="0" type_id="integer" />
    </ASSIGN>
    <CALL line="74" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  y" type_id="$anon_7ff01814" />
            <VARIABLE id="y" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="75" id="multiply" level="1">
        <PARAMETERS>
            <VARIABLE id="x" level="1" type_id="complex" />
            <VARIABLE id="y" level="1" type_id="complex" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="75" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="x*y" type_id="$anon_7ff024b4" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="76" id="writeln" level="0" />
    <ASSIGN line="78" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <NEGATE type_id="integer">
            <INTEGER_CONSTANT value="2" type_id="integer" />
        </NEGATE>
    </ASSIGN>
    <ASSIGN line="78" type_id="real">
        <VARIABLE id="x" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <NEGATE type_id="integer">
            <INTEGER_CONSTANT value="4" type_id="integer" />
        </NEGATE>
    </ASSIGN>
    <CALL line="78" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  x" type_id="$anon_7ff038b4" />
            <VARIABLE id="x" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <ASSIGN line="79" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="re" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="0" type_id="integer" />
    </ASSIGN>
    <ASSIGN line="79" type_id="real">
        <VARIABLE id="y" level="1" type_id="real">
            <FIELD id="im" level="2" type_id="real" />
        </VARIABLE>
        <INTEGER_CONSTANT value="1" type_id="integer" />
    </ASSIGN>
    <CALL line="79" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="  y" type_id="$anon_7ff04924" />
            <VARIABLE id="y" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="80" id="divide" level="1">
        <PARAMETERS>
            <VARIABLE id="x" level="1" type_id="complex" />
            <VARIABLE id="y" level="1" type_id="complex" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="80" id="print" level="1">
        <PARAMETERS>
            <STRING_CONSTANT value="x/y" type_id="$anon_7ff055c4" />
            <VARIABLE id="z" level="1" type_id="complex" />
        </PARAMETERS>
    </CALL>
    <CALL line="81" id="writeln" level="0" />
</COMPOUND>

*** PROCEDURE print ***

<COMPOUND line="14">
    <CALL line="15" id="write" level="0">
        <PARAMETERS>
            <WRITE_PARM>
                <VARIABLE id="name" level="2" type_id="mystring" />
            </WRITE_PARM>
            <WRITE_PARM>
makefile:112: recipe for target 'execute' failed
